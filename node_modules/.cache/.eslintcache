[{"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/index.js":"1","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/reportWebVitals.js":"2","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/App/App.js":"3","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/VendorDashboard/VendorDashboard.js":"4","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/VendorPastOrders/VendorPastOrders.js":"5","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/VendorCurrentOrders/VendorCurrentOrders.js":"6","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/VendorDashboardHome/VendorDashboardHome.js":"7","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/UserAnalytics/UserAnalytics.js":"8","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/PersonRow/PersonRow.js":"9","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/BarGraph/BarGraph.js":"10","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/LineGraph/LineGraph.js":"11","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/AccountProfile/AccountProfile.js":"12","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Rewards/Rewards.js":"13","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/NavBar/NavBar.js":"14","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Login/Login.js":"15","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Menu/Menu.js":"16","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/SignUp/SignUp.js":"17","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/services/apiClient.js":"18","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/contexts/appStateContext.js":"19","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/MenuCard/MenuCard.js":"20","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/hooks/useAppState.js":"21","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Cart/Cart.js":"22","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/utils/format.js":"23","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CartCard/CartCard.js":"24","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CustomerLineGraph/CustomerLineGraph.js":"25","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/UserDrawer/UserDrawer.js":"26","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Home/Home.js":"27","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/PaymentForm/PaymentForm.js":"28","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CheckOut/CheckOut.js":"29","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Review/Review.js":"30","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/AddressForm/AddressForm.js":"31","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Footer/Footer.js":"32"},{"size":456,"mtime":1626968944532,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1625853367958,"results":"35","hashOfConfig":"36"},{"size":1834,"mtime":1627598208573,"results":"37","hashOfConfig":"34"},{"size":3104,"mtime":1626131348360,"results":"38","hashOfConfig":"34"},{"size":9617,"mtime":1627512807523,"results":"39","hashOfConfig":"34"},{"size":9278,"mtime":1627512807522,"results":"40","hashOfConfig":"34"},{"size":2354,"mtime":1626131348361,"results":"41","hashOfConfig":"34"},{"size":6139,"mtime":1627513517496,"results":"42","hashOfConfig":"34"},{"size":518,"mtime":1626130802423,"results":"43","hashOfConfig":"34"},{"size":703,"mtime":1626130802422,"results":"44","hashOfConfig":"34"},{"size":2622,"mtime":1626989726931,"results":"45","hashOfConfig":"34"},{"size":3787,"mtime":1626989726930,"results":"46","hashOfConfig":"34"},{"size":5918,"mtime":1627063213472,"results":"47","hashOfConfig":"34"},{"size":2769,"mtime":1627926776740,"results":"48","hashOfConfig":"34"},{"size":3743,"mtime":1626989726931,"results":"49","hashOfConfig":"34"},{"size":3834,"mtime":1627674802072,"results":"50","hashOfConfig":"34"},{"size":4049,"mtime":1626105799741,"results":"51","hashOfConfig":"34"},{"size":2661,"mtime":1627674802073,"results":"52","hashOfConfig":"34"},{"size":619,"mtime":1626795892921,"results":"53","hashOfConfig":"34"},{"size":2576,"mtime":1627674802072,"results":"54","hashOfConfig":"34"},{"size":2845,"mtime":1627513517496,"results":"55","hashOfConfig":"34"},{"size":2529,"mtime":1627674802071,"results":"56","hashOfConfig":"34"},{"size":768,"mtime":1626968944533,"results":"57","hashOfConfig":"34"},{"size":6405,"mtime":1627674802071,"results":"58","hashOfConfig":"34"},{"size":2636,"mtime":1626989726930,"results":"59","hashOfConfig":"34"},{"size":3087,"mtime":1627674802072,"results":"60","hashOfConfig":"34"},{"size":11383,"mtime":1627941463225,"results":"61","hashOfConfig":"34"},{"size":2115,"mtime":1627674802072,"results":"62","hashOfConfig":"34"},{"size":4754,"mtime":1627674802071,"results":"63","hashOfConfig":"34"},{"size":1799,"mtime":1627513517496,"results":"64","hashOfConfig":"34"},{"size":3546,"mtime":1627513517494,"results":"65","hashOfConfig":"34"},{"size":1873,"mtime":1627918905905,"results":"66","hashOfConfig":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"1bwsa7r",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"gzlri",{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"69"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"69"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"69"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"69"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"69"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"69"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"69"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"69"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"69"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"140","messages":"141","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"69"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"69"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"69"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"69"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"69"},"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/index.js",[],["155","156"],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/reportWebVitals.js",[],["157","158"],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/App/App.js",["159"],"import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport VendorPastOrders from '../VendorPastOrders/VendorPastOrders';\nimport VendorRecentOrders from '../VendorCurrentOrders/VendorCurrentOrders';\nimport VendorDashboardHome from '../VendorDashboardHome/VendorDashboardHome';\nimport './App.css';\nimport UserAnalytics from '../UserAnalytics/UserAnalytics';\nimport Rewards from '../Rewards/Rewards';\nimport AccountProfile from '../AccountProfile/AccountProfile';\nimport Menu from '../Menu/Menu';\nimport Login from '../Login/Login'\nimport SignUp from \"../SignUp/SignUp\"\nimport Cart from '../Cart/Cart';\nimport PaymentForm from '../PaymentForm/PaymentForm';\nimport { AppStateProvider} from \"../../contexts/appStateContext\"\nimport CheckOut from '../CheckOut/CheckOut';\nimport Home from '../Home/Home';\n\nexport default function AppContainer(){\n  return(\n    <AppStateProvider>\n      <App/>\n    </AppStateProvider>\n  )\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <PaymentForm></PaymentForm> */}\n      <BrowserRouter>\n      <Routes>\n        <Route path=\"/checkout\" element={<CheckOut/>}/>\n        <Route path=\"/\" element={<Home/>}/>\n        <Route path=\"/cart\" element={<Cart/>}/>\n        <Route path=\"/signup\" element={<SignUp/>}/>\n        <Route path=\"/login\" element={<Login/>}/>\n        <Route path=\"/menu\" element={<Menu/>}/>\n        <Route path=\"/rewards\" element={<Rewards/>}/>\n        <Route path=\"/accountprofile\" element={<AccountProfile/>}/>\n        <Route path=\"/userAnalytics\" element={<UserAnalytics/>}/>\n         <Route path=\"/vendorDashboard\" element={<VendorDashboardHome/>} />\n        <Route path=\"/vendor/currentOrders\" element={<VendorRecentOrders/>} />\n        <Route path=\"/vendor/pastOrders\" element={<VendorPastOrders/>} />\n      </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\n","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/VendorDashboard/VendorDashboard.js",[],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/VendorPastOrders/VendorPastOrders.js",["160"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport classNames from \"classnames\";\nimport Box from \"@material-ui/core/Box\";\nimport { Container } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport VendorDashboard from \"../VendorDashboard/VendorDashboard\";\nimport { useAppStateContext } from \"../../contexts/appStateContext\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"@material-ui/core/Link\";\nimport {formatDate } from \"../../utils/format\";\nimport { createTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport axios from \"axios\";\nimport { DateRangePicker } from 'react-date-range'; // date range\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: \"#757ce8\",\n      main: \"#3f50b5\",\n      dark: \"#002884\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n    green: {\n      main: \"#43a047\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    position: \"relative\",\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n  dateRange: {\n    marginTop: 50\n  },\n  title: {\n    color: \"#00000\",\n    fontSize: 35,\n    fontWeight: 600, // or 'bold'\n    marginTop: 50,\n  },\n  customContainer: {\n    paddingLeft: 84,\n    paddingRight: 84\n  },\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  showMoreButton: {\n    color: theme.palette.green,\n    height: 30,\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function VendorCurrentOrders() {\n  const { vendorState, setvendorState } = useAppStateContext();\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n  const [modalId, setModalId] = useState(\"\");\n  const [products, setProducts] = useState([]);\n  const [filterOrder, setFilterOrder] = useState(vendorState.pastOrders)\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [dateRange, setDateRange] = useState([\n    {\n      startDate: new Date(),\n      endDate: new Date(),\n      key: 'selection'\n    }\n  ]);\n  const start = dateRange[0].startDate\n  const end = dateRange[0].endDate\n\n  useEffect(() => {\n    setFilterOrder(\n      vendorState.pastOrders.filter(item => {\n        let date = new Date(item.created_at)\n        date.setHours(0,0,0,0)\n        // console.log(date)\n        // console.log(\"start: \",start)\n        // console.log(\"end: \",end)\n        return date >= start && date <= end;\n     }\n    ))\n  }, [start, end, vendorState.pastOrders]);\n\n  console.log(filterOrder)\n\n  function preventDefault(event) {\n    event.preventDefault();\n  }\n\n  useEffect(() => {\n    // action on update of modal\n    const fetchOrderDetails = async () => {\n      const res = await axios.get(\"http://localhost:3001/order/detailByID\", {\n        params: {\n          orderId: modalId,\n        },\n      });\n      //const res = await apiClient.getOrderByID(modalId)\n      if (res.data?.orders) {\n        //console.log(vendorState.pastOrders)\n        setProducts(res.data.orders);\n      }\n      //console.log(res.data.orders) //array of products\n      if (modalId !== \"\") {\n        handleOpen();\n      }\n    };\n\n    fetchOrderDetails();\n  }, [modalId]);\n\n  const handleClickModal = (id) => {\n    if (modalId === id) {\n      handleOpen(); // no change needed just open current modal\n    } else {\n      setModalId(id); // change id and useEffect will auto change and open\n    }\n  };\n\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <Typography\n        id=\"simple-modal-title\"\n        align=\"center\"\n        className={classNames(classes.title)}\n      >\n        Order ID: {modalId}\n      </Typography>\n      <Grid container direction=\"row\" spacing={10} alignItems=\"center\">\n        {products.map((product, index) => (\n          <Grid key={index} item>\n            <Box\n              display=\"flex\"\n              flexWrap=\"wrap\"\n              p={1}\n              // bgcolor=\"background.paper\"\n              // css={{ maxWidth: 300 }}\n              justifyContent=\"space-between\"\n              borderRadius={10}\n            >\n              <Box p={1} borderRadius={10}>\n                <Typography\n                  align=\"center\"\n                  className={classNames(classes.subTitle)}\n                >\n                  Product\n                </Typography>\n                <Typography\n                  align=\"center\"\n                  className={classNames(classes.subTitle)}\n                >\n                  {product.product_id}\n                </Typography>\n              </Box>\n              <Box p={1} borderRadius={10}>\n                <Typography\n                  align=\"center\"\n                  className={classNames(classes.subTitle)}\n                >\n                  Quantity\n                </Typography>\n                <Typography\n                  align=\"center\"\n                  className={classNames(classes.subTitle)}\n                >\n                  {product.quantity}\n                </Typography>\n              </Box>\n              <Divider></Divider>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <VendorDashboard />\n      <div style={{\n        position: 'absolute', \n        left: '50%', \n        top: '50%',\n        transform: 'translate(-50%, -50%)',\n        display: 'block'\n    }}>\n      \n      </div>\n      <main className={classes.content}>\n      <Grid container\n        alignItems='center'\n        justifyContent='center'\n        style={{ minHeight: \"100vh\" }}>\n          <Grid item xs='auto'>\n          <DateRangePicker\n                    onChange={item => setDateRange([item.selection])}\n                    showSelectionPreview={true}\n                    moveRangeOnFirstSelection={false}\n                    months={1}\n                    ranges={dateRange}\n                    direction=\"horizontal\"\n                    className={classNames(classes.dateRange)}\n                />\n        </Grid>\n        <Grid item xs={12}>\n        <Container className={classNames(classes.customContainer)}>\n          <Typography align=\"left\" className={classNames(classes.title)}>\n            Past Orders\n          </Typography>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"left\">Order ID</TableCell>\n                <TableCell align=\"left\">Date </TableCell>\n                <TableCell align=\"left\">Delivery</TableCell>\n                <TableCell align=\"center\">Order Information</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filterOrder.map((order, index) => (\n                <TableRow\n                  key={order.order_id}\n                  style={\n                    index % 2\n                      ? { background: \"#F3F3F3\" }\n                      : { background: \"white\" }\n                  }\n                >\n                  <TableCell align=\"left\">{order.order_id}</TableCell>\n                  <TableCell align=\"left\">{formatDate(order.created_at)}</TableCell>\n                  <TableCell align=\"left\">\n                    {order.delivery_address === \"pick-up\" ? \"No\" : \"Yes\"}\n                  </TableCell>\n                  <MuiThemeProvider theme={theme}>\n                    <TableCell align=\"center\">\n                      <Button\n                        id={order.order_id}\n                        onClick={() => handleClickModal(order.order_id)}\n                        variant=\"contained\"\n                        className={classes.showMoreButton}\n                      >\n                        {\" \"}\n                        Show More{\" \"}\n                      </Button>\n                    </TableCell>\n                  </MuiThemeProvider>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <div className={classes.seeMore}>\n            <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n              See more orders\n            </Link>\n          </div>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {body}\n          </Modal>\n        </Container>\n        </Grid>\n        </Grid>\n      </main>\n     \n    </div>\n  );\n}\n","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/VendorCurrentOrders/VendorCurrentOrders.js",["161","162","163","164","165"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport classNames from \"classnames\";\nimport Box from \"@material-ui/core/Box\";\nimport { Container } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport VendorDashboard from \"../VendorDashboard/VendorDashboard\";\nimport { useAppStateContext } from \"../../contexts/appStateContext\";\nimport apiClient from \"../../services/apiClient\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Link from \"@material-ui/core/Link\";\nimport { formatDateLabel } from \"../../utils/format\";\nimport { createTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Slide from \"@material-ui/core/Slide\";\nimport { useEffect, useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Divider from \"@material-ui/core/Divider\";\nimport axios from \"axios\";\n\n\nfunction getModalStyle() {\n  const top = 50\n  const left = 50\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: \"#757ce8\",\n      main: \"#3f50b5\",\n      dark: \"#002884\",\n      contrastText: \"#fff\",\n    },\n    secondary: {\n      light: \"#ff7961\",\n      main: \"#f44336\",\n      dark: \"#ba000d\",\n      contrastText: \"#000\",\n    },\n    green: {\n      main: \"#43a047\",\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    position: \"relative\",\n  },\n  // necessary for content to be below app bar\n  toolbar: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3),\n  },\n  dateRange: {\n    marginTop: 50,\n    marginBottom: 50,\n  },\n  title: {\n    color: \"#00000\",\n    fontSize: 35,\n    fontWeight: 600, // or 'bold'\n    marginTop: 50,\n  },\n  customContainer: {\n    paddingLeft: 84,\n    paddingRight: 84,\n  },\n  seeMore: {\n    marginTop: theme.spacing(3),\n  },\n  showMoreButton: {\n    color: theme.palette.green,\n    height: 30,\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nexport default function VendorCurrentOrders() {\n  const { vendorState, setvendorState } = useAppStateContext();\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n  const [modalId, setModalId] = useState(\"\");\n  const [products, setProducts] = useState([]);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function preventDefault(event) {\n    event.preventDefault();\n  }\n\n  useEffect(() => {\n    // action on update of modal\n    const fetchOrderDetails = async () => {\n      const res = await axios.get(\"http://localhost:3001/order/detailByID\", {\n        params: {\n          orderId: modalId,\n        },\n      });\n      //const res = await apiClient.getOrderByID(modalId)\n      if (res.data?.orders) {\n        setProducts(res.data.orders);\n      }\n      //console.log(res.data.orders) //array of products\n      if (modalId !== \"\") {\n        handleOpen();\n      }\n    };\n\n    fetchOrderDetails();\n  }, [modalId]);\n\n  const handleClickModal = (id) => {\n    if (modalId === id) {\n      handleOpen(); // no change needed just open current modal\n    } else {\n      setModalId(id); // change id and useEffect will auto change and open\n    }\n  };\n\n  const handleClickCompleteOrder = async (id) => {\n   let json = {\"orderId\" : id}\n   const res = await apiClient.completeOrderDetailByID(json)\n   console.log(res.data?.orders)\n   setvendorState( (vendorState) => ( {\n     //will need to do the same when adding new orders, except add to the vendor state, instead of filtering.\n    currentOrders: vendorState.currentOrders.filter(order =>(\n      order.order_id !== id //filtering, if id matches throw it out, otherwise keep all orders\n    ))\n   }))\n\n  }\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <Typography\n        id=\"simple-modal-title\"\n        align=\"center\"\n        className={classNames(classes.title)}\n      >\n        Order ID: {modalId}\n      </Typography>\n      <Grid container direction=\"row\" spacing={10} alignItems=\"center\">\n        {products.map((product, index) => (\n          <Grid key={index} item>\n            <Box\n              display=\"flex\"\n              flexWrap=\"wrap\"\n              p={1}\n              // bgcolor=\"background.paper\"\n              // css={{ maxWidth: 300 }}\n              justifyContent=\"space-between\"\n              borderRadius={10}\n            >\n              <Box p={1} borderRadius={10}>\n                <Typography\n                  align=\"center\"\n                  className={classNames(classes.subTitle)}\n                >\n                  Product\n                </Typography>\n                <Typography\n                  align=\"center\"\n                  className={classNames(classes.subTitle)}\n                >\n                  {product.product_id}\n                </Typography>\n              </Box>\n              <Box p={1} borderRadius={10}>\n                <Typography\n                  align=\"center\"\n                  className={classNames(classes.subTitle)}\n                >\n                  Quantity\n                </Typography>\n                <Typography\n                  align=\"center\"\n                  className={classNames(classes.subTitle)}\n                >\n                  {product.quantity}\n                </Typography>\n              </Box>\n              <Divider></Divider>\n            </Box>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <VendorDashboard />\n      <main className={classes.content}>\n        <Container className={classNames(classes.customContainer)}>\n          <Typography align=\"left\" className={classNames(classes.title)}>\n            Current Orders\n          </Typography>\n          <Table size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"left\">Order ID</TableCell>\n                <TableCell align=\"left\">Minutes Past</TableCell>\n                <TableCell align=\"left\">Delivery</TableCell>\n                <TableCell align=\"center\">Order Information</TableCell>\n                <TableCell align=\"center\">Complete Order</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {vendorState.currentOrders.map((order, index) => (\n                <TableRow\n                  key={order.order_id}\n                  style={\n                    index % 2\n                      ? { background: \"#F3F3F3\" }\n                      : { background: \"white\" }\n                  }\n                >\n                  <TableCell align=\"left\">{order.order_id}</TableCell>\n                  <TableCell align=\"left\">\n                    {formatDateLabel(order.created_at)}\n                  </TableCell>\n                  <TableCell align=\"left\">\n                    {order.delivery_address === \"pick-up\" ? \"No\" : \"Yes\"}\n                  </TableCell>\n                  <MuiThemeProvider theme={theme}>\n                    <TableCell align=\"center\">\n                      <Button\n                        id={order.order_id}\n                        onClick={() => handleClickModal(order.order_id)}\n                        variant=\"contained\"\n                        className={classes.showMoreButton}\n                      >\n                        {\" \"}\n                        Show More{\" \"}\n                      </Button>\n                    </TableCell>\n                    <TableCell align=\"center\">\n                      <Button\n                        onClick={() => handleClickCompleteOrder(order.order_id)}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{ height: 30 }}\n                      >\n                        {\" \"}\n                        Finish Order{\" \"}\n                      </Button>\n                    </TableCell>\n                  </MuiThemeProvider>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n          <div className={classes.seeMore}>\n            <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n              See more orders\n            </Link>\n          </div>\n          <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\"\n          >\n            {body}\n          </Modal>\n        </Container>\n      </main>\n    </div>\n  );\n}\n","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/VendorDashboardHome/VendorDashboardHome.js",[],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/UserAnalytics/UserAnalytics.js",["166","167","168","169","170","171","172"],"import React, { useState } from \"react\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Drawer, Avatar, List, ListItem, ListItemText, ListItemIcon, Box, Card, Typography, CardContent, Button } from \"@material-ui/core\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport MessageIcon from '@material-ui/icons/Message';\nimport ListIcon from '@material-ui/icons/List';\nimport PeopleIcon from '@material-ui/icons/People';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BarGraph from \"../BarGraph/BarGraph\";\nimport LineGraph from \"../LineGraph/LineGraph\";\nimport classNames from \"classnames\";\nimport CustomerLineGraph from \"../CustomerLineGraph/CustomerLineGraph\";\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport ReportIcon from '@material-ui/icons/Report';\nimport PersonRow from \"../PersonRow/PersonRow\";\nimport { DateRangePicker } from 'react-date-range'; // date range\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\n\nimport apiClient from '../../services/apiClient';\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    // necessary for content to be below app bar\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.default,\n        padding: theme.spacing(3),\n    },\n    card: {\n        width: 150,\n        height: 150,\n        marginLeft: 10\n    },\n    cardcontent: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        marginTop: \"20%\"\n    },\n    newCus: {\n        width: 250,\n        height: 250,\n        marginLeft: 10\n    }\n}));\n\n\nexport default function UserAnalytics() {\n    const [selectedDate, handleDateChange] = useState(new Date());\n    const classes = useStyles();\n    const [graphState,setGraphState] = useState({\n        customers:false,\n        orders:true\n    })\n    const [dateRange, setDateRange] = useState([\n        {\n          startDate: new Date(),\n          endDate: new Date(),\n          key: 'selection'\n        }\n      ]);\n    \n    const showGraph = () => {\n        setGraphState((a) => (\n            {\n                customers:!a.customers,\n                orders:!a.orders\n            }\n            ))\n    }\n\n    console.log(graphState)\n    const range = dateRange[0].endDate.getDate() - dateRange[0].startDate.getDate() +1\n    const start = dateRange[0].startDate\n    return (\n        <div className={classes.root}>\n            <Drawer\n                variant=\"permanent\"\n                anchor=\"left\"\n                className={classes.drawer}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <Avatar></Avatar>\n                <List>\n                    <ListItem button key={'Dashboard'}>\n                        <ListItemIcon><DashboardIcon /></ListItemIcon>\n                        <ListItemText primary={'Dashboard'} />\n                    </ListItem>\n                    <ListItem button key={'Messages'}>\n                        <ListItemIcon><MessageIcon></MessageIcon></ListItemIcon>\n                        <ListItemText primary={'Messages'} />\n                    </ListItem>\n                    <ListItem button key={'My Tasks'}>\n                        <ListItemIcon><ListIcon /></ListItemIcon>\n                        <ListItemText primary={'My Tasks'} />\n                    </ListItem>\n                    <ListItem button key={'Clients'}>\n                        <ListItemIcon><PeopleIcon /></ListItemIcon>\n                        <ListItemText primary={'Clients'} />\n                    </ListItem>\n                </List>\n            </Drawer>\n            <Box m={4} display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n                <Box m= {4} display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\">\n                    <Card className={classes.card}>\n                        <CardContent className={classes.cardcontent}>\n                            <AttachMoneyIcon />\n                            <Button onClick={showGraph}>Sales</Button>\n                        </CardContent>\n                    </Card>\n                    <Card className={classes.card}>\n                        <CardContent className={classes.cardcontent}>\n                            <PeopleIcon />\n                            <Button onClick={showGraph}>Clients</Button>\n                        </CardContent>\n                    </Card>\n                    <Card className={classes.card}>\n                        <CardContent className={classes.cardcontent}>\n                            < ReportIcon />\n                            <Typography>Report</Typography>\n                        </CardContent>\n                    </Card>\n                </Box>\n                <DateRangePicker\n                    onChange={item => setDateRange([item.selection])}\n                    showSelectionPreview={true}\n                    moveRangeOnFirstSelection={false}\n                    months={1}\n                    ranges={dateRange}\n                    direction=\"horizontal\"\n                    className={classNames(classes.dateRange)}\n                />\n                <br></br>\n                {graphState.orders?<LineGraph range={range} dateRange={dateRange} start={start}/>:\n                <CustomerLineGraph range={range} dateRange={dateRange} start={start}/>}\n                <br></br>\n                <br></br>\n                <Card className={classes.newCus}>\n                    <Typography>New Customers</Typography>\n                    <PersonRow />\n                    <PersonRow />\n                    <PersonRow />\n                </Card>\n            </Box>\n        </div>\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/PersonRow/PersonRow.js",[],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/BarGraph/BarGraph.js",[],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/LineGraph/LineGraph.js",["173","174","175","176"],"import { Line, Bar } from 'react-chartjs-2';\nimport apiClient from '../../services/apiClient';\nimport { useEffect, useState } from \"react\";\n\nexport default function LineGraph({ range, dateRange, start }) {\n  const [data, setData] = useState([])\n  const days = {\n    1: 'Mon',\n    2: 'Tues',\n    3: 'Wed',\n    4: 'Thurs',\n    5: 'Fri',\n    6: 'Sat',\n    7: 'Sun'\n  }\n\n  const months = {\n    \"Jan\": '01',\n    \"Feb\": '02',\n    \"Mar\": '03',\n    \"Apr\": '04',\n    \"May\": '05',\n    \"Jun\": '06',\n    \"Jul\": '07',\n    \"Aug\": '08',\n    \"Sep\": '09',\n    \"Oct\": '10',\n    \"Nov\": '11',\n    \"Dec\": '12'\n  }\n\n\n  useEffect(() => {\n    Date.prototype.addDays = function (days) {\n      var date = new Date(this.valueOf());\n      date.setDate(date.getDate() + days);\n      return date;\n    }\n\n    function getDates(startDate, stopDate) {\n      var dateArray = [];\n      var currentDate = startDate;\n      while (currentDate <= stopDate) {\n        let date = new Date(currentDate)\n        date = date.toString()\n        let dateFormat = date.slice(11, 15) + '-' + months[date.slice(4, 7)] + '-' + date.slice(8, 10)\n        dateArray.push(dateFormat);\n        currentDate = currentDate.addDays(1);\n      }\n      return dateArray;\n    }\n\n    const dateArray = getDates(dateRange[0].startDate, dateRange[0].endDate)\n\n    const handleOnSubmit = async (startDate) => {\n\n      const { data, error } = await apiClient.getWeeklyOrders(\n        {\n          start_date: startDate\n        })\n      return data\n    }\n    const forLoop = async () => {\n      setData(await Promise.all(dateArray.map((date) => handleOnSubmit(date))))\n    }\n    forLoop()\n\n  }, [dateRange])\n\n  let more = []\n  for (let i =0; i<data.length;i++){\n    more.push(data[i]['orders'])\n  }\n\n  \n  let labels =[]\n  if (range>7){\n    start = start.getUTCDate()\n    for(let i =0;i<range;i++){\n      labels.push(start)\n      start+=1\n    }\n  }else{\n    start = start.getUTCDay()\n    for(let i =0;i<range;i++){\n      labels.push(days[start])\n      start+=1\n      if (start>7){\n        start =1\n      }\n    }\n  }\n\n\n  const state = {\n    labels: (labels),\n    datasets: [\n      {\n        label: 'Sales',\n        backgroundColor: 'rgba(75,192,192,1)',\n        lineTension: 0.5,\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: more\n      }\n    ]\n  }\n  return (\n    <div>\n      <Bar\n        data={state}\n        options={{\n          title: {\n            display: true,\n            text: 'Daily Sales',\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        }}\n      />\n    </div>\n  );\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/AccountProfile/AccountProfile.js",[],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Rewards/Rewards.js",["177","178","179","180","181","182"],"import { Typography, LinearProgress, Box, Link, Divider, Card, CardMedia, Button } from \"@material-ui/core\"\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport { useEffect, useState } from \"react\";\nimport NavBar from \"../NavBar/NavBar\"\nimport { useAppStateContext } from '../../contexts/appStateContext';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n        height: 30,\n        borderRadius: 5,\n    },\n    colorPrimary: {\n        backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n        borderRadius: 5,\n        backgroundColor: '#1a90ff',\n    },\n}))(LinearProgress);\n\nexport default function Rewards() {\n    const { appState } = useAppStateContext()\n    appState.rewards = 28\n    const [tab,setTab] = useState({\n        rewards:true,\n        orders:false,\n        favorites:false\n    })\n\n    const reward = () =>{\n        setTab((a) => (\n            {\n              orders:false, rewards:true,favorites:false\n            }\n          ))\n    }\n\n    const orders = () =>{\n        setTab((a) => (\n            {\n              orders:true, rewards:false,favorites:false\n            }\n          ))\n    }\n\n    const favorites = () =>{\n        setTab((a) => (\n            {\n              orders:false, rewards:false,favorites:true\n            }\n          ))\n    }\n    return (\n        <Box>\n            <NavBar></NavBar>\n            <Box px={80}>\n                <Box display=\"flex\" justifyContent=\"space-between\" px=\"auto\">\n                    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"flex-start\">\n                        <Typography>\n                            HEY,\n                        </Typography>\n                        <Typography variant=\"h4\">\n                            {appState.first_name} {appState.last_name}\n                        </Typography>\n                    </Box>\n                    <Typography variant=\"h4\">\n                        {appState.rewards}/30\n                    </Typography>\n                </Box>\n\n                <Box px=\"auto\" pt={5}>\n                    <BorderLinearProgress variant=\"determinate\" value={(appState.rewards/30)*100} />\n                </Box>\n\n                <br></br>\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" px=\"auto\" py={1}>\n                    <Button name=\"rewards\" onClick={reward}>\n                        <Link>Rewards</Link>\n                    </Button>\n                    <Button onClick={orders}>\n                        <Link>Orders</Link>\n                    </Button>\n                    <Button onClick={favorites}>\n                        <Link>Favorites</Link>\n                    </Button>\n                </Box>\n                <Box px={15} py={2}>\n                    <Divider></Divider>\n                </Box>\n                {tab.rewards?\n                <Box display=\"flex\" flexDirection=\"row\" justifyContent=\"space-between\" px=\"auto\">\n                    <Card>\n                        <Box px={3} py={3}>\n                            <img src=\"http://codepath-lifetracker.surge.sh/static/media/codepath.70a9a31f.svg\" width={100} height={200}></img>\n                            {/* <CardMedia\n                                className={styles.media}\n                                image=\"https://goo.gl/images/yDjWG9\">\n                            </CardMedia> */}\n                            <Typography>Reward 1</Typography>\n                            <Typography>Unlock for 30 points</Typography>\n\n                        </Box>\n                    </Card>\n                    <Card>\n                        <Box px={3} py={3}>\n                            <img src=\"http://codepath-lifetracker.surge.sh/static/media/codepath.70a9a31f.svg\" width={100} height={200}></img>\n                            {/* <CardMedia\n                                className={styles.media}\n                                image=\"https://goo.gl/images/yDjWG9\">\n                            </CardMedia> */}\n                            <Typography>Reward 2</Typography>\n                            <Typography>Unlock for 30 points</Typography>\n\n                        </Box>\n                    </Card>\n                    <Card>\n                        <Box px={3} py={3}>\n                            <img src=\"http://codepath-lifetracker.surge.sh/static/media/codepath.70a9a31f.svg\" width={100} height={200}></img>\n                            {/* <CardMedia\n                                className={styles.media}\n                                image=\"https://goo.gl/images/yDjWG9\">\n                            </CardMedia> */}\n                            <Typography>Reward 2</Typography>\n                            <Typography>Unlock for 30 points</Typography>\n\n                        </Box>\n                    </Card>\n                </Box>: tab.orders?\n                <Card>\n                    <Box p={4} display=\"flex\" flexDirection=\"column\">\n                        <Typography>No Orders Yet</Typography>\n                        <Typography>Your recent online orders can be found here</Typography>\n                        <Button>\n                            <Link>\n                            Lets fix that\n                            </Link>\n                        </Button>\n                    </Box>\n                </Card>\n                :\n                <Card>\n                    <Box p={4} display=\"flex\" flexDirection=\"column\">\n                        <Typography>No Favorites Yet</Typography>\n                        <Typography>Your favorite orders can be found here</Typography>\n                        <Button>\n                            <Link>\n                            Lets fix that\n                            </Link>\n                        </Button>\n                    </Box>\n                </Card>\n                }\n            </Box>\n\n        </Box>\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/NavBar/NavBar.js",["183"],"import { Button, Box, IconButton, Badge } from \"@material-ui/core\"\nimport { useNavigate, Link } from \"react-router-dom\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport UserDrawer from \"../UserDrawer/UserDrawer\";\nimport apiClient from '../../services/apiClient';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'\n\nimport classnames from 'classnames';\nimport { white } from \"color-name\";\nimport './NavBar.css'; \nimport pizzaImg from \"../../assets/pizza.png\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      backgroundColor: \"#fffff\"\n    },\n  },\n  customButton: {\n    border: \"3px solid\",\n    borderColor: \"#2EDBFD !important\",\n    backgroundColor: \"#000000\",\n    color: \"white !important\",\n    \"&:hover\": {\n      color: \"black !important\",\n      backgroundColor: \"#2EDBFD\",\n    }\n  }\n}));\n\n\nexport default function NavBar() {\n  const { appState, setAppState } = useAppStateContext()\n  const navigate = useNavigate()\n  const classes = useStyles()\n\n  const emptyUser = async () => {\n    await apiClient.logoutUser()\n    navigate(\"/\")\n    setAppState({\n      isAuthenticated: false,\n    })\n\n  }\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\" mt={1} px={5}>\n      <Link to={\"/\"}>\n      <img src={pizzaImg} id=\"pizza\" alt=\"logo\" ></img>\n      </Link>\n      <Box className={classes.root}>\n        <Button onClick={() => { navigate(\"/menu\") }} variant=\"outlined\" className={classnames(classes.customButton, \"glow-button\")}>Menus</Button>\n        <Button onClick={() => { navigate(\"/aboutUs\") }} variant=\"outlined\" className={classnames(classes.customButton, \"glow-button\")}>Our Story</Button>\n        <Button onClick={() => { navigate(\"/order\") }} variant=\"outlined\" className={classnames(classes.customButton, \"glow-button\")}>Order Now</Button>\n        {appState.isAuthenticated ? <UserDrawer></UserDrawer> :\n          <Button onClick={() => { navigate(\"/login\") }} variant=\"outlined\" className={classnames(classes.customButton, \"glow-button\")} >Login</Button>\n        }\n        {appState.isAuthenticated ? \n        <>\n        <Button onClick={emptyUser} variant=\"outlined\" className={classnames(classes.customButton, \"glow-button\")}>Log Out</Button> \n        <IconButton onClick={() => { navigate(\"/cart\") }}>\n          <Badge badgeContent={appState.cart?appState.cart.length:0}>\n            <ShoppingCartIcon style={{ color: \"#000\" }}></ShoppingCartIcon>\n          </Badge>\n        </IconButton>\n        </>:\n          <Button onClick={() => { navigate(\"/signup\") }} variant=\"outlined\" className={classnames(classes.customButton, \"glow-button\")}>Sign Up</Button>\n        }\n      </Box>\n    </Box>\n\n  )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Login/Login.js",["184","185","186"],"import Button from '@material-ui/core/Button';\nimport { useState } from \"react\"\nimport { Grid, Paper ,Avatar, TextField, Typography, Link} from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useNavigate } from \"react-router-dom\";\nimport apiClient from '../../services/apiClient';\nimport { useAppStateContext } from '../../contexts/appStateContext';\n\n\nexport default function Login(){\n    const { appState, setAppState} = useAppStateContext()\n    const navigate = useNavigate()\n    const [isProcessing, setIsProcessing] = useState(false)\n    const [errors, setErrors] = useState({})\n    const [form, setForm] = useState({\n    email: \"\",\n    password: \"\",\n  })\n\n    const handleOnInputChange = (event) => {\n        setForm((f) => ({ ...f, [event.target.name]: event.target.value }))\n    }\n\n    const handleOnSubmit = async () => {\n        setIsProcessing(true)\n        setErrors((e) => ({ ...e, form: null }))\n\n        const {data, error } = await apiClient.loginUser({email: form.email, password: form.password})\n        if (error){\n          setErrors((e) => ({ ...e, form:error}))\n        }\n        if (data?.user){\n            setAppState((a) => (\n                {\n                    ...a, \n                    first_name: data.user.first_name,\n                    rewards:data.user.rewards,\n                    last_name:data.user.last_last,\n                    isAuthenticated: true,\n                    email:data.user.email\n                }\n                ))\n          apiClient.setToken(data.token)\n        }\n        setIsProcessing(false)\n        navigate(\"/accountProfile\")\n      }\n\n    const paperStyle = {\n        padding:20,\n        height:\"70vh\",\n        width:280,\n        margin:\"20px auto\"\n    }\n    return(\n        <div>\n            <Paper elevation = {10} style= {paperStyle}>\n                <Grid align = \"center\">\n                    <Avatar>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <h2>\n                        Sign In\n                    </h2>\n                </Grid>\n                <TextField  \n                    onChange={handleOnInputChange} \n                    name =\"email\"\n                    label = \"email\" \n                    placeholder = \"Enter email\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange} \n                    name =\"password\"\n                    label = \"Password\" \n                    placeholder = \"Enter password\" \n                    type = \"password\" \n                    fullWidth \n                    required\n                />\n                <FormControlLabel\n                    control={\n                    <Checkbox\n                        // checked={state.checkedB}\n                        // onChange={handleChange}\n                        name=\"checkedB\"\n                        color=\"primary\"\n                    />\n                    }\n                    label=\"Remember Me\"\n                />\n                <Button \n                    onClick ={handleOnSubmit}\n                    type = 'submit' \n                    variant = \"contained\" \n                    color = 'primary' \n                    fullWidth\n                    >Sign in\n                </Button>\n                <Typography>\n                    Do you have an account?\n                    <Link href =\"/signup\">\n                        Sign Up\n                    </Link>\n                </Typography>\n                \n            </Paper>\n        </div>\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Menu/Menu.js",["187","188","189","190","191","192","193","194","195","196","197"],"import MenuCard from \"../MenuCard/MenuCard\"\nimport axios from \"axios\"\nimport { useState, useEffect } from \"react\"\nimport { Button, colors, ListItem, ListItemText, List, Card, CardActions, Box } from \"@material-ui/core\"\nimport { Grid } from \"@material-ui/core\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport NavBar from \"../NavBar/NavBar\"\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport apiClient from '../../services/apiClient';\n\n\n//class should import appstate that contains products\n//loop through each product to create a menucard\nexport default function Menu() {\n    const { appState, setAppState } = useAppStateContext()\n    const navigate = useNavigate()\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const [products, setProduct] = useState([])\n    const [active, setActive] = useState({\n        \"Pizza\":false,\n        \"Drink\":false,\n        \"misc\":false\n    })\n    const categories = ['Pizza', 'Drink', 'misc']\n    const checkout = () => {\n        navigate('/cart')\n    }\n\n    const getCat = (e) => {\n        let obj = {}\n        for (const [key, value] of Object.entries(active)) {\n            if( key === e.target.innerHTML){\n                obj[key] = true\n            }\n            else{\n                obj[key] = false\n            }\n        }\n        setActive(obj)\n        const fetchData = async () => {\n            try {\n                const productRes = await apiClient.fetchProductsByCategory({ category: e.target.innerHTML })\n                if (productRes?.data?.products) {\n                    setProduct(productRes.data.products)\n                }\n            } catch (err) {\n                setError(err)\n            }\n        }\n        fetchData()\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            setIsLoading(true)\n            try {\n                const productRes = await axios.get(\"http://localhost:3001/products/list\")\n                if (productRes?.data?.products) {\n                    setProduct(productRes.data.products)\n                }\n\n            } catch (err) {\n                console.log({ err })\n                setError(err)\n            }\n\n            setIsLoading(false)\n        }\n\n        fetchData()\n    }, [])\n    \n    return (\n        <div>\n            <NavBar></NavBar>\n            <br></br>\n            <Grid container justifyContent=\"space-around\">\n                <Grid item xs={3}>\n                    {categories.map((cat, idx) => (\n                        <Box my={2}>\n                            <Card key={idx}>\n                                {active.cat ?\n                                    <CardActions style={{ backgroundColor: \"#2ed9fb\" }}>\n                                        <Button onClick={getCat}>{cat}</Button>\n                                    </CardActions> :\n                                    <CardActions>\n                                        <Button onClick={getCat}>{cat}</Button>\n                                    </CardActions>}\n                                {/* <CardActions style={{backgroundColor: \"#2ed9fb\"}}>\n                                    <Button onClick={getCat}>{cat}</Button>\n                                </CardActions> */}\n                            </Card>\n                        </Box>\n                    ))}\n                </Grid>\n                <Grid\n                    item\n                    xs={8}\n                    container\n                >\n                    {products.map((product, idx) => (\n                        <Box mx={2}>\n                            <MenuCard product={product} key={idx} />\n                        </Box>\n                    ))}\n                </Grid>\n            </Grid>\n        </div>\n\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/SignUp/SignUp.js",["198","199","200","201","202","203","204","205","206"],"import Button from '@material-ui/core/Button';\nimport {Box, Grid, Paper ,Avatar, TextField, Typography, Link} from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useEffect, useState } from \"react\"\nimport apiClient from '../../services/apiClient';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useNavigate } from \"react-router-dom\"\n\nexport default function SignUp(){\n    const navigate = useNavigate()\n    const [isProcessing, setIsProcessing] = useState(false)\n    const [errors, setErrors] = useState({})\n    const [form, setForm] = useState({\n        username: \"\",\n        password: \"\",\n        email:\"\",\n        first_name:\"\",\n        last_name:\"\",\n        address:\"\"\n    })\n\n\n    const handleOnInputChange = (event) => {\n        setForm((f) => ({ ...f, [event.target.name]: event.target.value }))\n    }\n\n    const handleOnSubmit = async () => {\n        setIsProcessing(true)\n        setErrors((e) => ({ ...e, form: null }))\n\n        const {data, error } = await apiClient.signupUser(\n            {\n                username: form.username, \n                password: form.password, \n                email: form.email,\n                first_name:form.first_name, \n                last_name:form.last_name,\n                address:form.address\n            })\n        if (error){\n          setErrors((e) => ({ ...e, form:error}))\n        }\n\n        setIsProcessing(false)\n        navigate(\"/login\")\n      }\n\n    const paperStyle = {\n        padding:20,\n        height:\"70vh\",\n        width:280,\n        margin:\"20px auto\"\n    }\n    return(\n        <Grid>\n            <Paper elevation = {10} style= {paperStyle}>\n                <Grid align = \"center\">\n                    <Avatar>\n                        <LockOutlinedIcon/>\n                    </Avatar>\n                    <h2>\n                        Sign Up\n                    </h2>\n                </Grid>\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"username\"\n                    label = \"Username\" \n                    placeholder = \"Enter username\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"email\"\n                    label = \"Email\" \n                    placeholder = \"Enter email\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"password\"\n                    label = \"Password\" \n                    placeholder = \"Enter a password\" \n                    type = \"password\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"first_name\"\n                    label = \"First Name\" \n                    placeholder = \"Enter first name\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"last_name\"\n                    label = \"Last Name\" \n                    placeholder = \"Enter last name\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange}\n                    name = \"address\"\n                    label = \"address\" \n                    placeholder = \"Enter your address\" \n                    fullWidth\n                />\n                <Button \n                    onClick={handleOnSubmit}\n                    type = 'submit' \n                    variant = \"contained\" \n                    color = 'primary' \n                    fullWidth\n                    >Sign Up\n                </Button>\n            </Paper>\n        </Grid>\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/services/apiClient.js",[],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/contexts/appStateContext.js",[],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/MenuCard/MenuCard.js",["207"],"import minus_sign from \"../../assets/minus_sign.svg\"\nimport plus_sign from \"../../assets/plus_sign.svg\"\nimport { useState } from \"react\"\nimport { Card, Typography, Box, Button } from \"@material-ui/core\"\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport { Link } from \"react-router-dom\"\n\n//write function that can send products to a cart once buttons are clicked\nexport default function MenuCard({ product }) {\n    const { appState, setAppState } = useAppStateContext()\n    // console.log(appState)\n    const [quantity, setQuantity] = useState(0);\n\n    const increment = () => {\n        setQuantity(quantity + 1)\n    }\n\n    const decrement = () => {\n        if (quantity !== 0) {\n            setQuantity(quantity - 1)\n        }\n    }\n\n    let obj = {}\n    obj[product.name] = product.price\n\n    const addToCart = () => {\n\n        for (let i = 0; i < quantity; i++) {\n            setAppState((a) => (\n                {\n                    ...a, \n                    cart: [...a.cart, product.name]\n                }\n            ))\n        }\n        setQuantity(0)\n    }\n    console.log(appState.cart)\n\n    return (\n        <Card >\n            <Box display=\"flex\" flexDirection=\"column\" p={5}>\n                <img src={`${product.image}`} alt={`${product.name}`} width={150} height={130}></img>\n                <br></br>\n                <Box>\n                    <Box display=\"flex\" flexDirection=\"column\">\n                        <span className=\"name\">{`${product.name}`}</span>\n                        <br></br>\n                        <span>Price: ${`${product.price}`}</span>\n                        <span>Calories: {`${product.cals}`}</span>\n                        <br></br>\n                    </Box>\n                    {appState.first_name?<Box display=\"flex\" flexDirection=\"row\" justifyContent=\"center\">\n                        <input type=\"image\" onClick={increment} id=\"image\" height=\"25px\" width=\"25px\" alt=\"plus sign\" src={plus_sign}></input>\n                        <Typography>{quantity}</Typography>\n                        <input type=\"image\" onClick={decrement} id=\"image\" height=\"25px\" width=\"25px\" alt=\"minus sign\" src={minus_sign}></input>\n                    </Box>:<div></div>}\n                    <br></br>\n                    {/* Have a terninary operator to only have cart function if a user is logged in */}\n                    {appState.first_name?<Button variant=\"outlined\" disabled={quantity === 0} onClick={addToCart}>Add to Cart</Button>:<div></div>}\n                </Box>\n            </Box>\n        </Card>\n\n    )\n}\n","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/hooks/useAppState.js",["208"],"import { set } from \"date-fns\";\nimport { useEffect, useState } from \"react\";\nimport apiClient from '../services/apiClient';\n\nexport default function useAppState() {\n  const [error, setError] = useState(null)\n  const [appState, setAppState] = useState({\n    first_name: \"\",\n    last_name:\"\",\n    email:\"\",\n    isAuthenticated: false,\n    cart: [],\n    review:[],\n    favorites:[],\n    rewards: 0,\n    address:''\n  })\n  \n\n  const [vendorState, setvendorState] = useState({\n    currentOrders: [],\n    pastOrders : []\n  })\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      const { data, error } = await apiClient.fetchUserFromToken()\n      if (data) {\n        console.log(data.publicUser)\n        setAppState((a) => (\n          {\n            ...a, \n            first_name: data.publicUser.first_name, \n            last_name:data.publicUser.last_name,\n            email:data.publicUser.email,\n            rewards:data.publicUser.rewards,\n            isAuthenticated: true,\n            address:data.publicUser.address\n          }\n        ))\n      }\n      if (error) setError(error)\n    }\n\n    const token = localStorage.getItem(\"pizza_shop_token\")\n    if (token) {\n      apiClient.setToken(token)\n      fetchUser()\n    }\n  }, [])\n\n  useEffect(() => {\n    const fetchOrders = async () => {\n      const { data, error } = await apiClient.getCurrentOrders()\n      if (data) {\n        setvendorState((a) => (\n          {\n            ...a, currentOrders: data.orders\n          }\n        ))\n      }\n      if (error) setError(error)\n    }\n    const fetchPastOrders = async () => {\n      const { data, error } = await apiClient.getPastOrders()\n      if (data) {\n        setvendorState((a) => (\n          {\n            ...a, pastOrders: data.orders\n          }\n        ))\n      }\n      if (error) setError(error)\n    }\n    fetchOrders()\n    fetchPastOrders()\n  }, [])\n\n  // useEffect(() => {\n  //   const fetchCart = async () => {\n  //     const { data, error } = await apiClient.listCart()\n  //     if (data) {\n  //       setAppState((a) => (\n  //         {\n  //           ...a, cart: data.cart\n  //         }\n  //       ))\n  //     }\n  //     if (error) setError(error)\n  //   }\n  //   if (appState.isAuthenticated){\n  //     fetchCart()\n  //   }\n\n  // }, [appState.isAuthenticated])\n  \n  // useEffect(() => {\n  //   const fetchRewards = async () => {\n  //     const { data, error } = await apiClient.listRewards()\n  //     if (data) {\n  //       setAppState((a) => (\n  //         {\n  //           ...a, rewards: data.rewards\n  //         }\n  //       ))\n  //       //   setExercise(data.exercises)\n  //     }\n  //     if (error) setError(error)\n  //   }\n  //   if (appState.isAuthenticated){\n  //     fetchRewards()\n  //   }\n\n  // }, [appState.isAuthenticated])\n\n  return { appState, error, setAppState, setError, vendorState, setvendorState }\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Cart/Cart.js",["209","210","211","212","213","214","215","216","217","218","219"],"import { useAppStateContext } from '../../contexts/appStateContext';\nimport { Container, Button, Typography, Card, CardContent, CardMedia, Grid, Box } from '@material-ui/core';\nimport apiClient from '../../services/apiClient';\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport CartCard from '../CartCard/CartCard';\nimport NavBar from '../NavBar/NavBar';\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function Cart() {\n    const { appState, setAppState, vendorState, setvendorState } = useAppStateContext()\n    const [isCartFilled, setCart] = useState(false)\n    const navigate = useNavigate()\n    // if (appState.cart.length !==0){\n    //     setCart(true)\n    // }\n\n    const emptyCart = () => {\n        setAppState((a) => (\n            {\n                ...a,\n                cart: [],\n                review: []\n            }\n        ))\n    }\n\n    const formatCart = () => {\n        const obj = {}\n        for (let i = 0; i < appState.cart.length; i++) {\n            if (appState.cart[i] in obj) {\n                obj[appState.cart[i]] += 1\n            } else {\n                obj[appState.cart[i]] = 1\n            }\n        }\n\n        return obj\n    }\n\n    // console.log(prices)\n    const obj = formatCart()\n    const items = []\n    for (const [key, value] of Object.entries(obj)) {\n        items.push({ name: key, quantity: value });\n    }\n\n    const cart = []\n    for (const [key, value] of Object.entries(obj)) {\n        let obj = {}\n        obj[key] = value\n        cart.push(obj);\n    }\n\n    return (\n        <Container>\n            <NavBar></NavBar>\n            <Grid>\n                <Typography>My Cart</Typography>\n                <Button onClick={() => { navigate('/menu') }}>Add more items</Button>\n                <Grid container spacing={3}>\n                    <Grid item xs={4}>\n                        Item\n                    </Grid>\n                    <Grid item xs={4}>\n                        Price\n                    </Grid>\n                    <Grid item xs={4}>\n                        Quantity\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid >\n                {items.length === 0 ? \"Cart is empty\" : items.map((item, idx) => (\n                    <CartCard product={item} key={idx}></CartCard>\n                ))}\n            </Grid>\n            <Button onClick={emptyCart}>Clear Cart</Button>\n            <Button onClick={() => { navigate('/checkout') }}>Checkout Order</Button>\n        </Container>\n\n\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/utils/format.js",["220"],"import moment from \"moment\"\n\nexport const formatDate = (date) => {\n  const d = new Date(date)\n  return moment(d).format(\"MMM Do YYYY\")\n}\n\nconst formatter = new Intl.NumberFormat(\"en-US\", {\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n})\n\nexport const formatPrice = (amount) => {\n  const dollars = amount * 0.01\n  return `$${formatter.format(dollars)}`\n}\n\nexport const formatDateLabel = (date) => {\n    var today = new Date();\n\n    date = new Date(date.replace(' ', 'T'));\n    let currentTimeFromPosted =  Math.abs(today - date)\n    let min = Math.floor((currentTimeFromPosted/1000/60) << 0)\n    let sec = Math.floor((currentTimeFromPosted/1000) % 60)\n   // let minutesSinceOrdered = currentTimeFromPosted.getMinutes();\n    return min;\n}\n\n","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CartCard/CartCard.js",["221","222","223","224","225","226","227","228","229","230"],"import { Card, Typography, Box, Button, CardContent, CardMedia, Grid, IconButton } from \"@material-ui/core\"\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport apiClient from '../../services/apiClient';\nimport { useState, useEffect } from \"react\"\nimport axios from \"axios\"\nimport { Link } from \"react-router-dom\"\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\n//write function that can send products to a cart once buttons are clicked\nexport default function CartCard({ product }) {\n    const { appState, setAppState } = useAppStateContext()\n    const [error, setError] = useState(null)\n    const [isLoading, setIsLoading] = useState(false)\n    const [img, setImg] = useState([])\n    const [price, setPrice] = useState(0)\n    const check = appState.review[appState.review.findIndex(products => products.name === product.name)]\n    const initialize = check ? check.quantity : product.quantity\n    const [quantity, setQuantity] = useState(initialize);\n    const [total,setTotal] = useState(appState.cart.length)\n\n    // console.log(product)\n    // console.log(appState.review)\n\n    const increment = () => {\n        setQuantity((q) => (q + 1))\n    }\n\n\n    const decrement = () => {\n        if (quantity !== 0) {\n            setQuantity((q) => (q - 1))\n        }\n    }\n\n    //fix bug with add more items from the cart\n    useEffect(() => {\n        const updateCart = () => {\n            let newCart = []\n            console.log(appState.review)\n            for (let i = 0; i < appState.review.length; i++) {\n                for (let j = 0; j < appState.review[i].quantity; j++) {\n                    newCart.push(appState.review[i].name)\n                }\n\n            }\n            return newCart\n        }\n\n        if(appState.review.length){\n            const newCart = updateCart()\n    \n            setAppState((a) => ({\n                ...a,\n                cart: newCart\n            }))\n        }\n    },[total])\n\n    //there's a bug with this useffect\n    useEffect(() => {\n        const updateTotal = () => {\n            let newTotal = 0\n            for (let i = 0; i < appState.review.length; i++) {\n                newTotal += appState.review[i].quantity\n\n            }\n            return newTotal\n\n        }\n\n        const newTotal = updateTotal()\n        if(newTotal){\n            setTotal(newTotal)\n        }\n        \n    },[appState.review])\n    // console.log(total)\n\n    useEffect(() => {\n        const updateReview = () => {\n            const name = product.name\n            const elementsIndex = appState.review.findIndex(product => product.name === name)\n            let newArray = [...appState.review]\n            // console.log(appState.review)\n            if (newArray.length && elementsIndex>=0) {\n                newArray[elementsIndex].quantity = quantity\n                setAppState((a) => (\n                    {\n                        ...a,\n                        review: newArray\n                    }\n                ))\n            }\n\n        }\n        updateReview()\n    }, [quantity])\n\n    // console.log(appState.cart)\n    useEffect(() => {\n\n\n        const fetchData = async () => {\n            try {\n                const productRes = await apiClient.fetchProductByName({ productName: product })\n                if (productRes?.data?.productResponse[0].img) {\n                    setImg(productRes.data.productResponse[0].img)\n                }\n                if (productRes?.data?.productResponse[0].price) {\n                    setPrice(productRes.data.productResponse[0].price)\n                }\n                let obj = {}\n                obj['name'] = product.name\n                obj['price'] = productRes.data.productResponse[0].price\n                obj['img'] = productRes.data.productResponse[0].img\n                obj['quantity'] = quantity\n\n                let copy = true\n                // review = [{name:\"pizza\",'price':2,'img':imgurl,'quantity':3}]\n                // let existReview = appState.review.find((review) => review.name === product.name)\n                // console.log(existReview)\n                for (let i = 0; appState.review.length; i++) {\n                    if (appState.review[i].name === product.name) {\n                        copy = false\n                    }\n                }\n                if (copy) {\n                    setAppState((a) => (\n                        {\n                            ...a,\n                            review: [...a.review, obj]\n                        }\n                    ))\n                }\n\n\n            } catch (err) {\n                setError(err)\n            }\n\n        }\n\n        fetchData()\n    }, [])\n\n    return (\n        <Card>\n            {/* <CardMedia image={img} alt={product.name} height={200} width={150}></CardMedia> */}\n            <CardContent>\n                {/* <CardMedia image={img} alt={product.name}></CardMedia> */}\n\n                <Grid container direction=\"row\">\n                    <Grid item xs={4} container direction=\"row\">\n                        <img src={img} width={150} height={150} alt={product.name}></img>\n                        <Box p={8}>\n                            <Typography>{product.name}</Typography>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Box marginTop={8}>\n                            <Typography>Total: ${product.quantity * price}</Typography>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <Box border={1}  marginTop={8} display=\"flex\" alignItems='center' justifyContent=\"space-evenly\">\n                            <IconButton onClick={() => decrement()}><RemoveIcon/></IconButton>\n                            {/* <input type=\"image\" onClick={() => decrement()} id=\"image\" height=\"40px\" width=\"40px\" alt=\"minus sign\" src={minus_sign}></input> */}\n                            <Typography>{quantity}</Typography>\n                            <IconButton onClick={() => increment()}><AddIcon/></IconButton>\n                            {/* <input type=\"image\" onClick={() => increment()} id=\"image\" height=\"40px\" width=\"40px\" alt=\"plus sign\" src={plus_sign}></input> */}\n                        </Box>\n                    </Grid>\n                </Grid>\n\n            </CardContent>\n\n        </Card>\n\n    )\n}\n","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CustomerLineGraph/CustomerLineGraph.js",["231","232","233","234"],"import { Line, Bar } from 'react-chartjs-2';\nimport apiClient from '../../services/apiClient';\nimport { useEffect, useState } from \"react\";\n\nexport default function CustomerLineGraph({ range, dateRange, start }) {\n  const [data, setData] = useState([])\n  const days = {\n    1: 'Mon',\n    2: 'Tues',\n    3: 'Wed',\n    4: 'Thurs',\n    5: 'Fri',\n    6: 'Sat',\n    7: 'Sun'\n  }\n\n  const months = {\n    \"Jan\": '01',\n    \"Feb\": '02',\n    \"Mar\": '03',\n    \"Apr\": '04',\n    \"May\": '05',\n    \"Jun\": '06',\n    \"Jul\": '07',\n    \"Aug\": '08',\n    \"Sep\": '09',\n    \"Oct\": '10',\n    \"Nov\": '11',\n    \"Dec\": '12'\n  }\n\n\n  useEffect(() => {\n    Date.prototype.addDays = function (days) {\n      var date = new Date(this.valueOf());\n      date.setDate(date.getDate() + days);\n      return date;\n    }\n\n    function getDates(startDate, stopDate) {\n      var dateArray = [];\n      var currentDate = startDate;\n      while (currentDate <= stopDate) {\n        let date = new Date(currentDate)\n        date = date.toString()\n        let dateFormat = date.slice(11, 15) + '-' + months[date.slice(4, 7)] + '-' + date.slice(8, 10)\n        dateArray.push(dateFormat);\n        currentDate = currentDate.addDays(1);\n      }\n      return dateArray;\n    }\n\n    const dateArray = getDates(dateRange[0].startDate, dateRange[0].endDate)\n\n    const handleOnSubmit = async (startDate) => {\n\n      const { data, error } = await apiClient.getWeeklyCustomers(\n        {\n          start_date: startDate\n        })\n      return data\n    }\n    const forLoop = async () => {\n      setData(await Promise.all(dateArray.map((date) => handleOnSubmit(date))))\n    }\n    forLoop()\n\n  }, [dateRange])\n\n  let more = []\n  for (let i =0; i<data.length;i++){\n    more.push(data[i]['customers'])\n  }\n\n  let labels =[]\n  if (range>7){\n    start = start.getUTCDate()\n    for(let i =0;i<range;i++){\n      labels.push(start)\n      start+=1\n    }\n  }else{\n    start = start.getUTCDay()\n    for(let i =0;i<range;i++){\n      labels.push(days[start])\n      start+=1\n      if (start>7){\n        start =1\n      }\n    }\n  }\n\n  const state = {\n    labels: (labels),\n    datasets: [\n      {\n        label: 'Customers',\n        backgroundColor: 'rgba(75,192,192,1)',\n        lineTension: 0.5,\n        borderColor: 'rgba(0,0,0,1)',\n        borderWidth: 2,\n        data: more\n      }\n    ]\n  }\n  return (\n    <div>\n      <Bar\n        data={state}\n        options={{\n          title: {\n            display: true,\n            text: 'Daily Sales',\n            fontSize: 20\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        }}\n      />\n    </div>\n  );\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/UserDrawer/UserDrawer.js",["235","236"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport { useNavigate, Link } from \"react-router-dom\"\nimport classnames from 'classnames';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n    customButton: {\n        border: \"3px solid\",\n        borderColor: \"#2EDBFD !important\",\n        backgroundColor: \"#000000\",\n        color: \"white !important\",\n        \"&:hover\": {\n          color: \"black !important\",\n          backgroundColor: \"#2EDBFD\",\n        }\n      }\n});\n\nexport default function UserDrawer() {\n    const { appState } = useAppStateContext()\n    const classes = useStyles();\n    const navigate = useNavigate()\n    const [state, setState] = React.useState({\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({ ...state, [anchor]: open });\n    };\n\n    const myRewards = () => {\n        navigate(\"/rewards\")\n    }\n\n    const myAccount = () => {\n        navigate(\"/accountProfile\")\n    }\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                    <ListItem button key=\"My Rewards\">\n                        <ListItemIcon><AttachMoneyIcon /> </ListItemIcon>\n                        <Button onClick={myRewards} >My Rewards</Button>\n                        {/* <ListItemText primary={text} /> */}\n                    </ListItem>\n                    <ListItem button key=\"My Profile\">\n                        <ListItemIcon><AccountCircleIcon /></ListItemIcon>\n                        <Button onClick={myAccount} >My Profile</Button>\n                        {/* <ListItemText primary={text} /> */}\n                    </ListItem>\n            </List>\n        </div>\n    );\n\n    return (\n        <React.Fragment key={appState.first_name}>\n            <Button onClick={toggleDrawer('right', true)} className={classnames(classes.customButton, \"glow-button\")}>{appState.first_name}</Button>\n            <Drawer anchor={'right'} open={state['right']} onClose={toggleDrawer('right', false)}>\n                {list('right')}\n            </Drawer>\n        </React.Fragment>\n    );\n}\n","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Home/Home.js",["237","238","239","240","241"],"/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/PaymentForm/PaymentForm.js",["242","243","244","245","246","247"],"import {Typograph, Button, Divider, Typography} from '@material-ui/core'\nimport { Elements, CardElement, ElementsConsumer } from \"@stripe/react-stripe-js\"\nimport { loadStripe} from '@stripe/stripe-js'\nimport Review from '../Review/Review'\nimport apiClient from '../../services/apiClient';\n\n//grab stripe promise with public key  (put into env file later)\nconst stripePromise = loadStripe('pk_test_51JHVxDAT6YdOUgSd9z0elQAkI6zeC8p4dd8YBYk2nTyIiGumxkBUqPXnyQPdNGKhfVAwTCmgoWUVl57H5EBrIOsL00J3lY34QJ')\nexport default function PaymentForm({ checkoutToken }) {\n\n    const handleSubmit = async (event,elements,stripe) => {\n        event.preventDefault();\n\n        if(!stripe || !elements) return ;\n\n        const cardElement = elements.getElement(CardElement)\n\n        const { error, paymentMethod } = await stripe.createPaymentMethod({ type:'card', card:cardElement})\n\n        if(error){\n            console.log(error)\n        }else{\n            alert(\"success\")\n            const orderData = {\n                line_items: [],\n                customer:\"\",\n                shipping:{\n                    name:\"Primary\",\n                    street:'',\n                    postal_zip_code:\"\"\n                }\n            }\n        }\n    }\n\n    return (\n        <>\n        <Review></Review>\n        <Typography variant=\"h6\">Payment method</Typography>\n        <Elements stripe={stripePromise}>\n            <ElementsConsumer>\n                {({ elements, stripe }) => (\n                    <form onSubmit={(e) => handleSubmit(e,elements,stripe)}>\n                        <CardElement/>\n                        <br/> <br/>\n                        {/* <div style={{display:'flex', justifyContent: 'space-between'}}>\n                            <Button>Back</Button>\n                            <Button type=\"submit\" variant=\"contained\" disabled={!stripe} color=\"primary\">\n                                Pay\n                            </Button>\n\n                        </div> */}\n                        \n                    </form>\n                )}\n            </ElementsConsumer>\n        </Elements>\n        </>\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/CheckOut/CheckOut.js",["248","249"],"import { Paper, Stepper, Step, StepLabel, Typography, Button } from \"@material-ui/core\"\nimport { useState } from \"react\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport PaymentForm from \"../PaymentForm/PaymentForm\";\nimport AddressForm from \"../AddressForm/AddressForm\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport apiClient from '../../services/apiClient';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: '100%',\n    },\n    button: {\n        marginRight: theme.spacing(1),\n    },\n    instructions: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n    },\n    paper: {\n        marginTop: theme.spacing(10),\n        marginBottom: theme.spacing(10),\n        marginRight:theme.spacing(40),\n        marginLeft:theme.spacing(40),\n        padding: theme.spacing(2)\n    },\n}));\n\nconst steps = [\"Delivery Info\", \"Payment Methods\"]\n\nexport default function CheckOut() {\n    const navigate = useNavigate()\n    const [activeStep, setActiveStep] = useState(0)\n    const classes = useStyles();\n    const { appState, setAppState,vendorState, setvendorState } = useAppStateContext()\n\n    const emptyCart = () => {\n        setAppState((a) => (\n            {\n                ...a,\n                cart: [],\n                review: []\n            }\n        ))\n    }\n\n    const formatCart = () => {\n        const obj = {}\n        for (let i = 0; i < appState.cart.length; i++) {\n            if (appState.cart[i] in obj) {\n                obj[appState.cart[i]] += 1\n            } else {\n                obj[appState.cart[i]] = 1\n            }\n        }\n\n        return obj\n    }\n\n    // console.log(prices)\n    const obj = formatCart()\n    const items = []\n    for (const [key, value] of Object.entries(obj)) {\n        items.push({ name: key, quantity: value });\n    }\n\n    const cart = []\n    for (const [key, value] of Object.entries(obj)) {\n        let obj = {}\n        obj[key] = value\n        cart.push(obj);\n    }\n\n    const createOrder = async () => {\n        const { data, error } = await apiClient.createOrder(\n            {\n                \"cart\": {\n                    address: \"123 Street\",\n                    products: cart\n                }\n            }\n        )\n        setvendorState(oldState => ({ currentOrders: [...oldState.currentOrders, data] }))\n        emptyCart()\n        // if (error){\n        //   setErrors((e) => ({ ...e, form:error}))\n        // }\n    }\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n    const handleNext = (e) => {\n        if(e.target.innerHTML === \"Finish\"){\n            createOrder();\n        }\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    };\n\n\n    return (\n        <>\n            <Paper className={classes.paper}>\n                <Typography variant='h4' align='center'>Checkout</Typography>\n                <div className={classes.root}>\n                    <Stepper activeStep={activeStep}>\n                        {steps.map((label, index) => (\n                            <Step key={index}>\n                                <StepLabel>{label}</StepLabel>\n                            </Step>\n                        ))}\n                    </Stepper>\n                </div>\n                <div>\n                    {activeStep === steps.length ? (\n                        <div>\n                            <Typography className={classes.instructions}>\n                                All steps completed - you&apos;re finished\n                            </Typography>\n                        </div>\n                    ) : (\n                        <div>\n                            {activeStep === 0 ? <AddressForm /> : <PaymentForm></PaymentForm>}\n                            <div>\n                                {activeStep===0? <Button onClick={() => { navigate('/cart') }}>Back to Cart</Button>:\n                                <Button onClick={handleBack} className={classes.button}>\n                                    Back\n                                </Button>}\n                                \n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleNext}\n                                    className={classes.button}\n                                >\n                                    {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                </Button>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </Paper>\n        </>\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Review/Review.js",["250","251","252","253"],"import { Typography, List, ListItem, ListItemText, Paper, ImageListItem, Button } from \"@material-ui/core\";\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport { useNavigate } from \"react-router-dom\";\n\n\nexport default function Review() {\n    const { appState, setAppState } = useAppStateContext()\n    const navigate = useNavigate()\n    let total = 0\n    for (let i = 0; i < appState.review.length; i++) {\n        total += (appState.review[i].price * appState.review[i].quantity)\n    }\n\n    return (\n        <>\n\n            <Typography variant='h6' gutterBottom>Order Summary</Typography>\n            <List>\n                {appState.review.map((item) => (\n                    <ListItem key={item}>\n                        <ImageListItem key={item.img} style={{ marginRight: '8px' }}>\n                            <img\n                                srcSet={item.img}\n                                alt={item.name}\n                                loading=\"lazy\"\n                                width={150}\n                                height={150}\n                            />\n                        </ImageListItem>\n                        <ListItemText primary={item.name} secondary={`Quantity: ${item.quantity}`}></ListItemText>\n                        <Typography variant=\"body2\">Total: ${item.quantity * item.price}</Typography>\n                    </ListItem>\n                ))}\n                <ListItem>\n                    <ListItemText primary=\"Total\" />\n                    <Typography variant=\"subtitle1\" style={{ fontWeight: 700 }}>\n                        ${total}\n                    </Typography>\n                </ListItem>\n            </List>\n            {/* <Button onClick={() => { navigate('/checkout') }}>Checkout</Button> */}\n        </>\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/AddressForm/AddressForm.js",["254","255","256","257","258","259","260","261","262","263","264"],"import Button from '@material-ui/core/Button';\nimport { useState } from \"react\"\nimport { Grid, Paper ,Avatar, TextField, Typography, Link} from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { useNavigate } from \"react-router-dom\";\nimport apiClient from '../../services/apiClient';\nimport { useAppStateContext } from '../../contexts/appStateContext';\n\n\nexport default function AddressForm(){\n    const { appState, setAppState} = useAppStateContext()\n    const navigate = useNavigate()\n    const [isProcessing, setIsProcessing] = useState(false)\n    const [errors, setErrors] = useState({})\n    const [form, setForm] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    address:\"\",\n    email:\"\",\n    postal_code:\"\"\n  })\n\n    const handleOnInputChange = (event) => {\n        setForm((f) => ({ ...f, [event.target.name]: event.target.value }))\n    }\n\n    const handleOnSubmit = async () => {\n        setIsProcessing(true)\n        setErrors((e) => ({ ...e, form: null }))\n\n        const {data, error } = await apiClient.loginUser({email: form.email, password: form.password})\n        if (error){\n          setErrors((e) => ({ ...e, form:error}))\n        }\n        if (data?.user){\n            setAppState((a) => (\n                {\n                    ...a, \n                    first_name: data.user.first_name,\n                    rewards:data.user.rewards,\n                    last_name:data.user.last_last,\n                    isAuthenticated: true,\n                    email:data.user.email\n                }\n                ))\n          apiClient.setToken(data.token)\n        }\n        setIsProcessing(false)\n        navigate(\"/accountProfile\")\n      }\n\n    const paperStyle = {\n        padding:20,\n        height:\"70vh\",\n        width:280,\n        margin:\"20px auto\"\n    }\n    return(\n        <div>\n            <Paper elevation = {10} style= {paperStyle}>\n                <Typography variant=\"h6\" align=\"center\">Delivery Information</Typography>\n                <TextField  \n                    onChange={handleOnInputChange} \n                    name =\"first_name\"\n                    label = \"First Name\" \n                    placeholder = \"Enter first name\"  \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange} \n                    name =\"last_name\"\n                    label = \"Last Name\" \n                    placeholder = \"Enter last name\"   \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange} \n                    name =\"address\"\n                    label = \"Address\" \n                    placeholder = \"Enter address\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange} \n                    name =\"email\"\n                    label = \"Email\" \n                    placeholder = \"Enter email\" \n                    fullWidth \n                    required\n                />\n                <TextField \n                    onChange={handleOnInputChange} \n                    name =\"postal_code\"\n                    label = \"Postal Code\" \n                    placeholder = \"Enter postal code\" \n                    fullWidth \n                    required\n                />\n            </Paper>\n        </div>\n    )\n}","/Users/kordellschrock/Documents/Github/ecommerce/frontend/src/components/Footer/Footer.js",["265","266","267","268","269","270","271","272","273","274","275"],"import { Button, Box, IconButton, Badge, Typography } from \"@material-ui/core\"\nimport { useNavigate, Link } from \"react-router-dom\"\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useAppStateContext } from '../../contexts/appStateContext';\nimport UserDrawer from \"../UserDrawer/UserDrawer\";\nimport apiClient from '../../services/apiClient';\nimport FacebookIcon from '@material-ui/icons/Facebook';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport classnames from 'classnames';\nimport { white } from \"color-name\";\nimport './Footer.css'; \nimport pizzaImg from \"../../assets/pizza.png\"\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(0),\n      paddingLeft: \"30px\",\n      backgroundColor: \"#fffff\"\n    },\n  },\n  customButton: {\n    border: \"3px solid\",\n    borderColor: \"#2EDBFD !important\",\n    backgroundColor: \"#000000\",\n    color: \"white !important\",\n    \"&:hover\": {\n      color: \"black !important\",\n      backgroundColor: \"#2EDBFD\",\n    }\n  },\n  largeIcon: {\n    width: 40,\n    height: 40,\n  },\n  title:{\n    fontWeight: 600, // or 'bold'\n    fontSize: 30\n  }\n}));\n\n\nexport default function Footer() {\n \n  const classes = useStyles()\n\n\n  return (\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" pt={2} pr={5}>\n        <Box className={classes.root}>\n        <FacebookIcon className={classes.largeIcon}/>\n        <TwitterIcon className={classes.largeIcon}/>\n        <InstagramIcon className={classes.largeIcon}/>\n        </Box>\n        <Typography variant=\"body1\" className={classes.title} color=\"inherit\">\n        46 Star Island Dr, Miami Beach, FL 33139\n       </Typography>\n       <Typography variant=\"body1\" color=\"inherit\">\n                © 2021 Simply Pizza. \n       </Typography>\n      \n    </Box>\n\n  )\n}",{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"276","replacedBy":"280"},{"ruleId":"278","replacedBy":"281"},{"ruleId":"282","severity":1,"message":"283","line":13,"column":8,"nodeType":"284","messageId":"285","endLine":13,"endColumn":19},{"ruleId":"282","severity":1,"message":"286","line":103,"column":24,"nodeType":"284","messageId":"285","endLine":103,"endColumn":38},{"ruleId":"282","severity":1,"message":"287","line":3,"column":8,"nodeType":"284","messageId":"285","endLine":3,"endColumn":12},{"ruleId":"282","severity":1,"message":"288","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":16},{"ruleId":"282","severity":1,"message":"289","line":22,"column":8,"nodeType":"284","messageId":"285","endLine":22,"endColumn":13},{"ruleId":"282","severity":1,"message":"290","line":25,"column":8,"nodeType":"284","messageId":"285","endLine":25,"endColumn":12},{"ruleId":"282","severity":1,"message":"291","line":26,"column":8,"nodeType":"284","messageId":"285","endLine":26,"endColumn":19},{"ruleId":"282","severity":1,"message":"292","line":2,"column":10,"nodeType":"284","messageId":"285","endLine":2,"endColumn":20},{"ruleId":"282","severity":1,"message":"293","line":2,"column":22,"nodeType":"284","messageId":"285","endLine":2,"endColumn":45},{"ruleId":"282","severity":1,"message":"294","line":3,"column":8,"nodeType":"284","messageId":"285","endLine":3,"endColumn":20},{"ruleId":"282","severity":1,"message":"295","line":10,"column":8,"nodeType":"284","messageId":"285","endLine":10,"endColumn":16},{"ruleId":"282","severity":1,"message":"296","line":22,"column":8,"nodeType":"284","messageId":"285","endLine":22,"endColumn":17},{"ruleId":"282","severity":1,"message":"297","line":68,"column":12,"nodeType":"284","messageId":"285","endLine":68,"endColumn":24},{"ruleId":"282","severity":1,"message":"298","line":68,"column":26,"nodeType":"284","messageId":"285","endLine":68,"endColumn":42},{"ruleId":"282","severity":1,"message":"299","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":14},{"ruleId":"300","severity":1,"message":"301","line":34,"column":5,"nodeType":"302","messageId":"303","endLine":38,"endColumn":6},{"ruleId":"282","severity":1,"message":"304","line":57,"column":21,"nodeType":"284","messageId":"285","endLine":57,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":68,"column":6,"nodeType":"307","endLine":68,"endColumn":17,"suggestions":"308"},{"ruleId":"282","severity":1,"message":"309","line":1,"column":64,"nodeType":"284","messageId":"285","endLine":1,"endColumn":73},{"ruleId":"282","severity":1,"message":"310","line":2,"column":10,"nodeType":"284","messageId":"285","endLine":2,"endColumn":20},{"ruleId":"282","severity":1,"message":"311","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":19},{"ruleId":"312","severity":1,"message":"313","line":94,"column":29,"nodeType":"314","endLine":94,"endColumn":137},{"ruleId":"312","severity":1,"message":"313","line":106,"column":29,"nodeType":"314","endLine":106,"endColumn":137},{"ruleId":"312","severity":1,"message":"313","line":118,"column":29,"nodeType":"314","endLine":118,"endColumn":137},{"ruleId":"282","severity":1,"message":"315","line":10,"column":10,"nodeType":"284","messageId":"285","endLine":10,"endColumn":15},{"ruleId":"282","severity":1,"message":"316","line":13,"column":13,"nodeType":"284","messageId":"285","endLine":13,"endColumn":21},{"ruleId":"282","severity":1,"message":"317","line":15,"column":12,"nodeType":"284","messageId":"285","endLine":15,"endColumn":24},{"ruleId":"282","severity":1,"message":"318","line":16,"column":12,"nodeType":"284","messageId":"285","endLine":16,"endColumn":18},{"ruleId":"282","severity":1,"message":"319","line":4,"column":18,"nodeType":"284","messageId":"285","endLine":4,"endColumn":24},{"ruleId":"282","severity":1,"message":"288","line":4,"column":26,"nodeType":"284","messageId":"285","endLine":4,"endColumn":34},{"ruleId":"282","severity":1,"message":"320","line":4,"column":36,"nodeType":"284","messageId":"285","endLine":4,"endColumn":48},{"ruleId":"282","severity":1,"message":"287","line":4,"column":50,"nodeType":"284","messageId":"285","endLine":4,"endColumn":54},{"ruleId":"282","severity":1,"message":"310","line":6,"column":10,"nodeType":"284","messageId":"285","endLine":6,"endColumn":20},{"ruleId":"282","severity":1,"message":"316","line":16,"column":13,"nodeType":"284","messageId":"285","endLine":16,"endColumn":21},{"ruleId":"282","severity":1,"message":"321","line":16,"column":23,"nodeType":"284","messageId":"285","endLine":16,"endColumn":34},{"ruleId":"282","severity":1,"message":"304","line":18,"column":12,"nodeType":"284","messageId":"285","endLine":18,"endColumn":17},{"ruleId":"282","severity":1,"message":"322","line":19,"column":12,"nodeType":"284","messageId":"285","endLine":19,"endColumn":21},{"ruleId":"282","severity":1,"message":"323","line":27,"column":11,"nodeType":"284","messageId":"285","endLine":27,"endColumn":19},{"ruleId":"282","severity":1,"message":"324","line":33,"column":26,"nodeType":"284","messageId":"285","endLine":33,"endColumn":31},{"ruleId":"282","severity":1,"message":"325","line":2,"column":9,"nodeType":"284","messageId":"285","endLine":2,"endColumn":12},{"ruleId":"282","severity":1,"message":"326","line":2,"column":46,"nodeType":"284","messageId":"285","endLine":2,"endColumn":56},{"ruleId":"282","severity":1,"message":"327","line":2,"column":58,"nodeType":"284","messageId":"285","endLine":2,"endColumn":62},{"ruleId":"282","severity":1,"message":"328","line":3,"column":8,"nodeType":"284","messageId":"285","endLine":3,"endColumn":24},{"ruleId":"282","severity":1,"message":"329","line":4,"column":8,"nodeType":"284","messageId":"285","endLine":4,"endColumn":16},{"ruleId":"282","severity":1,"message":"311","line":5,"column":10,"nodeType":"284","messageId":"285","endLine":5,"endColumn":19},{"ruleId":"282","severity":1,"message":"317","line":12,"column":12,"nodeType":"284","messageId":"285","endLine":12,"endColumn":24},{"ruleId":"282","severity":1,"message":"318","line":13,"column":12,"nodeType":"284","messageId":"285","endLine":13,"endColumn":18},{"ruleId":"282","severity":1,"message":"330","line":32,"column":16,"nodeType":"284","messageId":"285","endLine":32,"endColumn":20},{"ruleId":"282","severity":1,"message":"327","line":6,"column":10,"nodeType":"284","messageId":"285","endLine":6,"endColumn":14},{"ruleId":"282","severity":1,"message":"331","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":13},{"ruleId":"282","severity":1,"message":"290","line":2,"column":41,"nodeType":"284","messageId":"285","endLine":2,"endColumn":45},{"ruleId":"282","severity":1,"message":"291","line":2,"column":47,"nodeType":"284","messageId":"285","endLine":2,"endColumn":58},{"ruleId":"282","severity":1,"message":"309","line":2,"column":60,"nodeType":"284","messageId":"285","endLine":2,"endColumn":69},{"ruleId":"282","severity":1,"message":"325","line":2,"column":77,"nodeType":"284","messageId":"285","endLine":2,"endColumn":80},{"ruleId":"282","severity":1,"message":"296","line":3,"column":8,"nodeType":"284","messageId":"285","endLine":3,"endColumn":17},{"ruleId":"282","severity":1,"message":"311","line":4,"column":20,"nodeType":"284","messageId":"285","endLine":4,"endColumn":29},{"ruleId":"282","severity":1,"message":"332","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":13},{"ruleId":"282","severity":1,"message":"333","line":11,"column":36,"nodeType":"284","messageId":"285","endLine":11,"endColumn":47},{"ruleId":"282","severity":1,"message":"286","line":11,"column":49,"nodeType":"284","messageId":"285","endLine":11,"endColumn":63},{"ruleId":"282","severity":1,"message":"334","line":12,"column":12,"nodeType":"284","messageId":"285","endLine":12,"endColumn":24},{"ruleId":"282","severity":1,"message":"335","line":12,"column":26,"nodeType":"284","messageId":"285","endLine":12,"endColumn":33},{"ruleId":"282","severity":1,"message":"336","line":25,"column":9,"nodeType":"284","messageId":"285","endLine":25,"endColumn":12},{"ruleId":"282","severity":1,"message":"337","line":1,"column":33,"nodeType":"284","messageId":"285","endLine":1,"endColumn":39},{"ruleId":"282","severity":1,"message":"309","line":1,"column":54,"nodeType":"284","messageId":"285","endLine":1,"endColumn":63},{"ruleId":"282","severity":1,"message":"332","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":13},{"ruleId":"282","severity":1,"message":"327","line":6,"column":10,"nodeType":"284","messageId":"285","endLine":6,"endColumn":14},{"ruleId":"282","severity":1,"message":"304","line":13,"column":12,"nodeType":"284","messageId":"285","endLine":13,"endColumn":17},{"ruleId":"282","severity":1,"message":"322","line":14,"column":12,"nodeType":"284","messageId":"285","endLine":14,"endColumn":21},{"ruleId":"282","severity":1,"message":"338","line":14,"column":23,"nodeType":"284","messageId":"285","endLine":14,"endColumn":35},{"ruleId":"305","severity":1,"message":"339","line":58,"column":7,"nodeType":"307","endLine":58,"endColumn":14,"suggestions":"340"},{"ruleId":"305","severity":1,"message":"341","line":98,"column":8,"nodeType":"307","endLine":98,"endColumn":18,"suggestions":"342"},{"ruleId":"305","severity":1,"message":"343","line":145,"column":8,"nodeType":"307","endLine":145,"endColumn":10,"suggestions":"344"},{"ruleId":"282","severity":1,"message":"299","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":14},{"ruleId":"300","severity":1,"message":"301","line":34,"column":5,"nodeType":"302","messageId":"303","endLine":38,"endColumn":6},{"ruleId":"282","severity":1,"message":"304","line":57,"column":21,"nodeType":"284","messageId":"285","endLine":57,"endColumn":26},{"ruleId":"305","severity":1,"message":"306","line":68,"column":6,"nodeType":"307","endLine":68,"endColumn":17,"suggestions":"345"},{"ruleId":"282","severity":1,"message":"320","line":11,"column":8,"nodeType":"284","messageId":"285","endLine":11,"endColumn":20},{"ruleId":"282","severity":1,"message":"327","line":13,"column":23,"nodeType":"284","messageId":"285","endLine":13,"endColumn":27},{"ruleId":"282","severity":1,"message":"346","line":2,"column":27,"nodeType":"284","messageId":"285","endLine":2,"endColumn":36},{"ruleId":"282","severity":1,"message":"347","line":3,"column":8,"nodeType":"284","messageId":"285","endLine":3,"endColumn":12},{"ruleId":"282","severity":1,"message":"290","line":4,"column":8,"nodeType":"284","messageId":"285","endLine":4,"endColumn":12},{"ruleId":"282","severity":1,"message":"291","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":19},{"ruleId":"282","severity":1,"message":"348","line":12,"column":10,"nodeType":"284","messageId":"285","endLine":12,"endColumn":14},{"ruleId":"282","severity":1,"message":"349","line":1,"column":9,"nodeType":"284","messageId":"285","endLine":1,"endColumn":18},{"ruleId":"282","severity":1,"message":"337","line":1,"column":20,"nodeType":"284","messageId":"285","endLine":1,"endColumn":26},{"ruleId":"282","severity":1,"message":"350","line":1,"column":28,"nodeType":"284","messageId":"285","endLine":1,"endColumn":35},{"ruleId":"282","severity":1,"message":"296","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":17},{"ruleId":"282","severity":1,"message":"351","line":18,"column":24,"nodeType":"284","messageId":"285","endLine":18,"endColumn":37},{"ruleId":"282","severity":1,"message":"352","line":24,"column":19,"nodeType":"284","messageId":"285","endLine":24,"endColumn":28},{"ruleId":"282","severity":1,"message":"333","line":37,"column":35,"nodeType":"284","messageId":"285","endLine":37,"endColumn":46},{"ruleId":"282","severity":1,"message":"304","line":77,"column":23,"nodeType":"284","messageId":"285","endLine":77,"endColumn":28},{"ruleId":"282","severity":1,"message":"353","line":1,"column":52,"nodeType":"284","messageId":"285","endLine":1,"endColumn":57},{"ruleId":"282","severity":1,"message":"337","line":1,"column":74,"nodeType":"284","messageId":"285","endLine":1,"endColumn":80},{"ruleId":"282","severity":1,"message":"321","line":7,"column":23,"nodeType":"284","messageId":"285","endLine":7,"endColumn":34},{"ruleId":"282","severity":1,"message":"354","line":8,"column":11,"nodeType":"284","messageId":"285","endLine":8,"endColumn":19},{"ruleId":"282","severity":1,"message":"337","line":1,"column":8,"nodeType":"284","messageId":"285","endLine":1,"endColumn":14},{"ruleId":"282","severity":1,"message":"347","line":3,"column":10,"nodeType":"284","messageId":"285","endLine":3,"endColumn":14},{"ruleId":"282","severity":1,"message":"355","line":3,"column":23,"nodeType":"284","messageId":"285","endLine":3,"endColumn":29},{"ruleId":"282","severity":1,"message":"327","line":3,"column":54,"nodeType":"284","messageId":"285","endLine":3,"endColumn":58},{"ruleId":"282","severity":1,"message":"328","line":4,"column":8,"nodeType":"284","messageId":"285","endLine":4,"endColumn":24},{"ruleId":"282","severity":1,"message":"329","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":16},{"ruleId":"282","severity":1,"message":"356","line":6,"column":8,"nodeType":"284","messageId":"285","endLine":6,"endColumn":24},{"ruleId":"282","severity":1,"message":"316","line":13,"column":13,"nodeType":"284","messageId":"285","endLine":13,"endColumn":21},{"ruleId":"282","severity":1,"message":"317","line":15,"column":12,"nodeType":"284","messageId":"285","endLine":15,"endColumn":24},{"ruleId":"282","severity":1,"message":"318","line":16,"column":12,"nodeType":"284","messageId":"285","endLine":16,"endColumn":18},{"ruleId":"282","severity":1,"message":"357","line":29,"column":11,"nodeType":"284","messageId":"285","endLine":29,"endColumn":25},{"ruleId":"282","severity":1,"message":"337","line":1,"column":10,"nodeType":"284","messageId":"285","endLine":1,"endColumn":16},{"ruleId":"282","severity":1,"message":"358","line":1,"column":23,"nodeType":"284","messageId":"285","endLine":1,"endColumn":33},{"ruleId":"282","severity":1,"message":"359","line":1,"column":35,"nodeType":"284","messageId":"285","endLine":1,"endColumn":40},{"ruleId":"282","severity":1,"message":"360","line":2,"column":10,"nodeType":"284","messageId":"285","endLine":2,"endColumn":21},{"ruleId":"282","severity":1,"message":"327","line":2,"column":23,"nodeType":"284","messageId":"285","endLine":2,"endColumn":27},{"ruleId":"282","severity":1,"message":"361","line":4,"column":10,"nodeType":"284","messageId":"285","endLine":4,"endColumn":28},{"ruleId":"282","severity":1,"message":"362","line":5,"column":8,"nodeType":"284","messageId":"285","endLine":5,"endColumn":18},{"ruleId":"282","severity":1,"message":"296","line":6,"column":8,"nodeType":"284","messageId":"285","endLine":6,"endColumn":17},{"ruleId":"282","severity":1,"message":"363","line":10,"column":8,"nodeType":"284","messageId":"285","endLine":10,"endColumn":18},{"ruleId":"282","severity":1,"message":"315","line":11,"column":10,"nodeType":"284","messageId":"285","endLine":11,"endColumn":15},{"ruleId":"282","severity":1,"message":"364","line":13,"column":8,"nodeType":"284","messageId":"285","endLine":13,"endColumn":16},"no-native-reassign",["365"],"no-negated-in-lhs",["366"],["365"],["366"],"no-unused-vars","'PaymentForm' is defined but never used.","Identifier","unusedVar","'setvendorState' is assigned a value but never used.","'List' is defined but never used.","'ListItem' is defined but never used.","'Slide' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'DatePicker' is defined but never used.","'MuiPickersUtilsProvider' is defined but never used.","'DateFnsUtils' is defined but never used.","'BarGraph' is defined but never used.","'apiClient' is defined but never used.","'selectedDate' is assigned a value but never used.","'handleDateChange' is assigned a value but never used.","'Line' is defined but never used.","no-extend-native","Date prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'months'. Either include it or remove the dependency array.","ArrayExpression",["367"],"'CardMedia' is defined but never used.","'makeStyles' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'white' is defined but never used.","'appState' is assigned a value but never used.","'isProcessing' is assigned a value but never used.","'errors' is assigned a value but never used.","'colors' is defined but never used.","'ListItemText' is defined but never used.","'setAppState' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'checkout' is assigned a value but never used.","'value' is assigned a value but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'Link' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'data' is assigned a value but never used.","'set' is defined but never used.","'axios' is defined but never used.","'vendorState' is assigned a value but never used.","'isCartFilled' is assigned a value but never used.","'setCart' is assigned a value but never used.","'sec' is assigned a value but never used.","'Button' is defined but never used.","'setIsLoading' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'appState.review' and 'setAppState'. Either include them or remove the dependency array.",["368"],"React Hook useEffect has missing dependencies: 'appState.review', 'product.name', and 'setAppState'. Either include them or remove the dependency array.",["369"],"React Hook useEffect has missing dependencies: 'appState.review', 'product', 'quantity', and 'setAppState'. Either include them or remove the dependency array.",["370"],["371"],"'withTheme' is defined but never used.","'Grid' is defined but never used.","'grey' is defined but never used.","'Typograph' is defined but never used.","'Divider' is defined but never used.","'paymentMethod' is assigned a value but never used.","'orderData' is assigned a value but never used.","'Paper' is defined but never used.","'navigate' is assigned a value but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'handleOnSubmit' is assigned a value but never used.","'IconButton' is defined but never used.","'Badge' is defined but never used.","'useNavigate' is defined but never used.","'useAppStateContext' is defined but never used.","'UserDrawer' is defined but never used.","'classnames' is defined but never used.","'pizzaImg' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"376","fix":"377"},{"desc":"378","fix":"379"},{"desc":"372","fix":"380"},"Update the dependencies array to be: [dateRange, months]",{"range":"381","text":"382"},"Update the dependencies array to be: [appState.review, setAppState, total]",{"range":"383","text":"384"},"Update the dependencies array to be: [appState.review, product.name, quantity, setAppState]",{"range":"385","text":"386"},"Update the dependencies array to be: [appState.review, product, quantity, setAppState]",{"range":"387","text":"388"},{"range":"389","text":"382"},[1625,1636],"[dateRange, months]",[1982,1989],"[appState.review, setAppState, total]",[3079,3089],"[appState.review, product.name, quantity, setAppState]",[4693,4695],"[appState.review, product, quantity, setAppState]",[1636,1647]]